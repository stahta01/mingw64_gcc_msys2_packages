From 6583b57167fa5b879b7aa625f78fc54685704010 Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Wed, 26 Oct 2022 10:21:24 -0400
Subject: Ada build fix for GCC 4.7 building GCC 4.6

---

diff --git a/gcc/ada/gcc-interface/Make-lang.in b/gcc/ada/gcc-interface/Make-lang.in
index 7f37381f381..05e9eb3efd9 100644
--- a/gcc/ada/gcc-interface/Make-lang.in
+++ b/gcc/ada/gcc-interface/Make-lang.in
@@ -1092,13 +1092,25 @@ gnatstage2: force
 
 # Ada language specific files.
 
-ada/b_gnat1.c : $(GNAT1_ADA_OBJS)
-	$(GNATBIND) -C $(ADA_INCLUDES) -o ada/b_gnat1.c -n ada/gnat1drv.ali
-ada/b_gnat1.o : ada/b_gnat1.c
-
-ada/b_gnatb.c : $(GNATBIND_OBJS) ada/gnatbind.o ada/interfac.o
-	$(GNATBIND) -C $(ADA_INCLUDES) -o ada/b_gnatb.c ada/gnatbind.ali
-ada/b_gnatb.o : ada/b_gnatb.c
+ada/b_gnat1.adb : $(GNAT1_ADA_OBJS)
+        # Old gnatbind do not allow a path for -o.
+	$(GNATBIND) $(ADA_INCLUDES) -o b_gnat1.adb -n ada/gnat1drv.ali
+	$(MV) b_gnat1.adb b_gnat1.ads ada/
+
+ada/b_gnat1.o : ada/b_gnat1.adb
+        # Do not use ADAFLAGS to get rid of -gnatg which generates a lot
+        # of style messages.
+	$(CC) -c $(CFLAGS) $(ADA_CFLAGS) -gnatp -gnatws $(ADA_INCLUDES) \
+	    $< $(OUTPUT_OPTION)
+
+ada/b_gnatb.adb : $(GNATBIND_OBJS) ada/gnatbind.o ada/interfac.o
+        # Old gnatbind do not allow a path for -o.
+	$(GNATBIND) $(ADA_INCLUDES) -o b_gnatb.adb ada/gnatbind.ali
+	$(MV) b_gnatb.adb b_gnatb.ads ada/
+
+ada/b_gnatb.o : ada/b_gnatb.adb
+	$(CC) -c $(CFLAGS) $(ADA_CFLAGS) -gnatp -gnatws $(ADA_INCLUDES) \
+	    $< $(OUTPUT_OPTION)
 
 include $(srcdir)/ada/Make-generated.in
 
diff --git a/gcc/ada/gcc-interface/Makefile.in b/gcc/ada/gcc-interface/Makefile.in
index 77027dd82a1..dfd8933c867 100644
--- a/gcc/ada/gcc-interface/Makefile.in
+++ b/gcc/ada/gcc-interface/Makefile.in
@@ -2725,13 +2725,19 @@ gnat-cross: force
 # because all that file does, when not compiling with GCC,
 # is include the system varargs.h.
 
-b_gnatl.c : $(GNATLINK_OBJS)
-	$(GNATBIND) -C $(ADA_INCLUDES) -o b_gnatl.c gnatlink.ali
-b_gnatl.o : b_gnatl.c
+b_gnatl.adb : $(GNATLINK_OBJS)
+	$(GNATBIND) $(ADA_INCLUDES) -o b_gnatl.adb gnatlink.ali
 
-b_gnatm.c : $(GNATMAKE_OBJS)
-	$(GNATBIND) -C $(ADA_INCLUDES) -o b_gnatm.c gnatmake.ali
-b_gnatm.o : b_gnatm.c
+b_gnatl.o : b_gnatl.adb
+	$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) -gnatws -gnatyN \
+	    $< $(OUTPUT_OPTION)
+
+b_gnatm.adb : $(GNATMAKE_OBJS)
+	$(GNATBIND) $(ADA_INCLUDES) -o b_gnatm.adb gnatmake.ali
+
+b_gnatm.o : b_gnatm.adb
+	$(CC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) -gnatws -gnatyN \
+	    $< $(OUTPUT_OPTION)
 
 ADA_INCLUDE_DIR = $(libsubdir)/adainclude
 ADA_RTL_OBJ_DIR = $(libsubdir)/adalib
diff --git a/gcc/ada/s-soflin.ads b/gcc/ada/s-soflin.ads
index 5a2c556f5a8..7f8de10dce0 100644
--- a/gcc/ada/s-soflin.ads
+++ b/gcc/ada/s-soflin.ads
@@ -221,8 +223,12 @@ package System.Soft_Links is
    Task_Termination_Handler : EO_Param_Proc := Task_Termination_NT'Access;
    --  Handle task termination routines (task/non-task case as appropriate)
 
    Finalize_Global_List : No_Param_Proc := Null_Finalize_Global_List'Access;
    --  Performs finalization of global list for controlled objects
+   Finalize_Library_Objects : No_Param_Proc;
+   pragma Export (C, Finalize_Library_Objects,
+                  "__gnat_finalize_library_objects");
+   --  will be initialized by the binder
 
    Adafinal : No_Param_Proc := Adafinal_NT'Access;
    --  Performs the finalization of the Ada Runtime
@@ -287,6 +291,16 @@ package System.Soft_Links is
    -- Exception Tracebacks Soft-Links --
    -------------------------------------
 
+   Library_Exception : EO;
+   pragma Export (Ada, Library_Exception, "__gnat_library_exception");
+   --  Library-level finalization routines use this common reference to store
+   --  the first library-level exception which occurs during finalization.
+
+   Library_Exception_Set : Boolean := False;
+   pragma Export (Ada, Library_Exception_Set, "__gnat_library_exception_set");
+   --  Used in conjunction with Library_Exception, set when an exception has
+   --  been stored.
+
    Traceback_Decorator_Wrapper : Traceback_Decorator_Wrapper_Call;
    --  Wrapper to the possible user specified traceback decorator to be
    --  called during automatic output of exception data.
-- 
