# Maintainer:  Tim Stahlhut <stahta01@gmail.com>
# Contributor: Carlos Antunes
# Contributor: Alexey Pavlov
# Contributor: nanodude

# regular cross compiler triplet
_target=x86_64-w64-mingw32
_build=${MINGW_CHOST}    # i686-w64-mingw32
_host=${_build}
#
if [[ "$MSYSTEM" == "UCRT64" ]]; then
  _build_package=opt-ucrt-${MSYSTEM_CARCH}
else
  _build_package=opt-mingw-${MSYSTEM_CARCH}
fi
_build_prefix=/opt${MINGW_PREFIX}

_realname=headers
_sourcedir=mingw-w64-git
pkgbase=mingw-cross-${_target}-${_realname}
pkgname=("${_build_package}-${_target}-crt-git")
pkgver=2.0.0.2777.24b1f9cdcf1d
pkgrel=1
_commit='24b1f9cdcf1d425700312373b14e2a6e58c6d0aa' # 2.0.0.2777
pkgdesc="GNU Tools for x86_64 - MinGW64 CRT and headers (mingw-w64)"
arch=('any')
url='https://mingw-w64.sourceforge.io/'
license=('custom')
groups=("${_build_package}-${_target}-toolchain")
depends=()
makedepends=("${_build_package}-${_target}-gcc")
options=('staticlibs' '!strip' '!emptydirs')
source=("${_sourcedir}"::"git+https://git.code.sf.net/p/mingw-w64/mingw-w64#commit=$_commit"
        002-crt2-Backport-SVN-5819.patch)
sha256sums=('SKIP'
            'e9bd159c06f80f5a1c338d0348ba18bb21b8759abf159933a54a29c84299f752')
# =========================================== #
# Helper macros to help make tasks easier     #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    if patch --dry-run -Rbp1 -i "${srcdir}/${_patch}" > /dev/null 2>&1 ; then
      msg2 "Skipping ${_patch} because it likely was already applied"
    else
      msg2 "Applying ${_patch}"
      patch -Nbp1 -i "${srcdir}/${_patch}"
    fi
  done
}
del_file_exists() {
  for _fname in "$@"
  do
    if [ -f ${_fname} ]; then
      rm -rf ${_fname}
    fi
  done
}
# =========================================== #
# Declare global variables; begin with underscore to avoid name conflicts
_git_base_commit=

pkgver() {
  cd "${srcdir}/${_sourcedir}"
  local _major=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | grep 'define __MINGW64_VERSION_MAJOR' | sed -e 's/.*[\t ]//' | tr '\n' '.' | sed 's/.$/\n/')
  local _minor=$(head -n 16 mingw-w64-headers/crt/_mingw_mac.h | grep 'define __MINGW64_VERSION_MINOR' | sed -e 's/.*[\t ]//' | tr '\n' '.' | sed 's/.$/\n/')
  local _rev=0
  printf "%s.%s.%s.%s.%s" ${_major} ${_minor} ${_rev} "$(git rev-list --count ${_git_base_commit})" "$(git rev-parse --short=12 ${_git_base_commit})"
}

prepare() {
  cd "${srcdir}/${_sourcedir}"

  _git_base_commit=$(git rev-parse HEAD)

  apply_patch_with_msg \
    002-crt2-Backport-SVN-5819.patch
}

build() {
  export CXXFLAGS="-pipe -std=gnu++98"
  export CFLAGS="-pipe -std=gnu89"
  export LDFLAGS="-pipe"
  export CPPFLAGS="-D__USE_MINGW_ANSI_STDIO=0"

  msg "Building ${MSYSTEM} ${_target} CRT"
  _crt_configure_args="--enable-lib64 --disable-lib32"

  [[ -d ${srcdir}/crt-${MSYSTEM} ]] && rm -rf ${srcdir}/crt-${MSYSTEM}
  mkdir -p ${srcdir}/crt-${MSYSTEM} && cd ${srcdir}/crt-${MSYSTEM}

  export PATH="${_build_prefix}/bin:${PATH}"

  CC="${_target}-gcc" \
  CXX="${_target}-g++" \
  ${srcdir}/${_sourcedir}/mingw-w64-crt/configure \
    --prefix=${_build_prefix} \
    --build=${_build} \
    --host=${_target} \
    --enable-wildcard \
    ${_crt_configure_args}

  make
}

package_crt-git() {
  depends=("${_build_package}-${_target}-headers-git")

  msg "Installing ${MSYSTEM} ${_target} crt"
  cd ${srcdir}/crt-${MSYSTEM}
  make DESTDIR=${pkgdir} install
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${_build_package}-${_target}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
